//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfMailSenderClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMailSender")]
    public interface IMailSender {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSender/SendMail", ReplyAction="http://tempuri.org/IMailSender/SendMailResponse")]
        bool SendMail(string from, string password, string mailto, string caption, string message, string[] attachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailSender/SendMail", ReplyAction="http://tempuri.org/IMailSender/SendMailResponse")]
        System.Threading.Tasks.Task<bool> SendMailAsync(string from, string password, string mailto, string caption, string message, string[] attachFiles);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMailSenderChannel : WpfMailSenderClient.ServiceReference.IMailSender, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSenderClient : System.ServiceModel.ClientBase<WpfMailSenderClient.ServiceReference.IMailSender>, WpfMailSenderClient.ServiceReference.IMailSender {
        
        public MailSenderClient() {
        }
        
        public MailSenderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailSenderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailSenderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailSenderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendMail(string from, string password, string mailto, string caption, string message, string[] attachFiles) {
            return base.Channel.SendMail(from, password, mailto, caption, message, attachFiles);
        }
        
        public System.Threading.Tasks.Task<bool> SendMailAsync(string from, string password, string mailto, string caption, string message, string[] attachFiles) {
            return base.Channel.SendMailAsync(from, password, mailto, caption, message, attachFiles);
        }
    }
}
